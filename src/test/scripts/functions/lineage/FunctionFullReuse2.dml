#-------------------------------------------------------------
#
# Copyright 2020 Graz University of Technology
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#-------------------------------------------------------------
# Increase rows and cols for better performance gains

SimLM = function(Matrix[Double] X, Matrix[Double] y, Double lamda=0.0001) return (Matrix[Double] beta) 
{
  A = t(X) %*% X + diag(matrix(lamda, rows=ncol(X), cols=1));
  b = t(X) %*% y;
  beta = solve(A, b);

  if (nrow(beta) == ncol(X))
    beta = t(beta) %*% beta;
}

r = 100
c = 10

X = rand(rows=r, cols=c, seed=42);
y = rand(rows=r, cols=1, seed=43);
R = matrix(0, 1, 2);

beta = SimLM(X, y, 0.0001);
R[,1] = beta;

y = y + 1; # to generate cache miss
beta = SimLM(X, y, 0.0001);
R[,2] = beta;

write(R, $1, format="text");
