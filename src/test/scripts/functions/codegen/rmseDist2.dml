#-------------------------------------------------------------
#
# Modifications Copyright 2019 Graz University of Technology
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------


# # does not work
# # Caused by: java.lang.ArrayIndexOutOfBoundsException: 45000
# U = matrix( 5, rows=2, cols=300)
# X = t(U) %*% U
# X[1:150,] = matrix(0,150,300);
# while(FALSE){}
# D = sqrt(-2 * t(U) %*% U + rowSums(t(U)^2) + colSums(U^2));
# S = as.matrix(sum(rowSums((X != 0) * (X - D))^2));
# write(S,$1)

#works
U = matrix( 5, rows=300, cols=2)
X = U %*% t(U)
X[1:150,] = matrix(0,150,300);
while(FALSE){}
D = sqrt(-2 * U %*% t(U) + rowSums(U^2) + colSums(t(U)^2));
S = as.matrix(sum(rowSums((X != 0) * (X - D))^2));
write(S,$1)

stop("enough!")


rmse = function(Matrix[Double] U, Matrix[Double] V, Matrix[Double] X) return(Matrix[Double] S)
{
D = sqrt(-2 * U %*% V + rowSums(U^2) + colSums(V^2))
S = as.matrix(sum(rowSums((X != 0) * (X - D))^2))
}

# # does not work
# #Caused by: java.lang.ArrayIndexOutOfBoundsException: 600
# V = matrix( 5, rows=2, cols=300)
# U = t(V)
# X = rand(rows=300, cols=300, pdf="normal", sparsity=0.2, seed=7)
# S = rmse(U, V, X)
# write(S,$1)

# # works
# V = matrix( 5, rows=2, cols=300)
# U = t(V)
# X = U %*% V
# X[1:150,] = matrix(0,150,300);
# while(FALSE){}
# S = rmse(U, V, X)
# write(S,$1)

# # works
# U = matrix( 5, rows=300, cols=2)
# V = t(U)
# X = U %*% V
# X[1:150,] = matrix(0,150,300);
# while(FALSE){}
# S = rmse(U, V, X)
# write(S,$1)

# # works
# U = matrix( 5, rows=300, cols=2)
# V = t(U)
# X = rand(rows=300, cols=300, pdf="normal", sparsity=0.2, seed=7)
# S = rmse(U, V, X)
# write(S,$1)

# #works
# V = matrix( 5, rows=2, cols=300)
# U = t(V)
# X = U %*% V
# X[1:150,] = matrix(0,150,300);
# while(FALSE){}
# D = sqrt(-2 * U %*% V + rowSums(U^2) + colSums(V^2));
# S = as.matrix(sum(rowSums((X != 0) * (X - D))^2));
# write(S,$1)
